"use strict";

var _redux = require("redux");

var _notesDatabaseInterface = require("./notesDatabaseInterface.js");

var reducer = function reducer(state, action) {
	if (action.type === "deletedNote") {
		var result = action.payload;
		console.log(result);
	} else if (action.type === "receivedUpdatedNotes") {
		var result = action.payload;
		console.log(result);
	}
	return state;
};

var store = (0, _redux.createStore)(reducer, 0);
store.subscribe(function () {
	console.log("STATE CHANGE");
});

module.exports = {
	getNotes: function getNotes(search, cb) {
		return (0, _notesDatabaseInterface.getNotes)(store, search, cb);
	},
	addNote: function addNote(noteText) {
		return (0, _notesDatabaseInterface.addNote)(noteText);
	},
	deleteNote: function deleteNote(_id) {
		return (0, _notesDatabaseInterface.deleteNote)(store, _id);
	},
	editNote: function editNote(_id, originalText) {
		return (0, _notesDatabaseInterface.editNote)(_id, originalText);
	}
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9wdWJsaWMvamF2YXNjcmlwdHMvYXBwLmpzIl0sIm5hbWVzIjpbInJlZHVjZXIiLCJzdGF0ZSIsImFjdGlvbiIsInR5cGUiLCJyZXN1bHQiLCJwYXlsb2FkIiwiY29uc29sZSIsImxvZyIsInN0b3JlIiwic3Vic2NyaWJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImdldE5vdGVzIiwic2VhcmNoIiwiY2IiLCJhZGROb3RlIiwibm90ZVRleHQiLCJkZWxldGVOb3RlIiwiX2lkIiwiZWRpdE5vdGUiLCJvcmlnaW5hbFRleHQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsVUFBVSxTQUFWQSxPQUFVLENBQVNDLEtBQVQsRUFBZ0JDLE1BQWhCLEVBQXdCO0FBQ3ZDLEtBQUdBLE9BQU9DLElBQVAsS0FBZ0IsYUFBbkIsRUFBa0M7QUFDakMsTUFBSUMsU0FBU0YsT0FBT0csT0FBcEI7QUFDQUMsVUFBUUMsR0FBUixDQUFZSCxNQUFaO0FBQ0EsRUFIRCxNQUdPLElBQUdGLE9BQU9DLElBQVAsS0FBZ0Isc0JBQW5CLEVBQTJDO0FBQ2pELE1BQUlDLFNBQVNGLE9BQU9HLE9BQXBCO0FBQ0FDLFVBQVFDLEdBQVIsQ0FBWUgsTUFBWjtBQUNBO0FBQ0QsUUFBT0gsS0FBUDtBQUNBLENBVEQ7O0FBV0EsSUFBTU8sUUFBUSx3QkFBWVIsT0FBWixFQUFxQixDQUFyQixDQUFkO0FBQ0FRLE1BQU1DLFNBQU4sQ0FBZ0IsWUFBTTtBQUNyQkgsU0FBUUMsR0FBUixDQUFZLGNBQVo7QUFDQSxDQUZEOztBQUlBRyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2hCQyxXQUFVLGtCQUFTQyxNQUFULEVBQWlCQyxFQUFqQixFQUFxQjtBQUM5QixTQUFPLHNDQUFTTixLQUFULEVBQWdCSyxNQUFoQixFQUF3QkMsRUFBeEIsQ0FBUDtBQUNBLEVBSGU7QUFJaEJDLFVBQVMsaUJBQVNDLFFBQVQsRUFBbUI7QUFDM0IsU0FBTyxxQ0FBUUEsUUFBUixDQUFQO0FBQ0EsRUFOZTtBQU9oQkMsYUFBWSxvQkFBU0MsR0FBVCxFQUFjO0FBQ3pCLFNBQU8sd0NBQVdWLEtBQVgsRUFBa0JVLEdBQWxCLENBQVA7QUFDQSxFQVRlO0FBVWhCQyxXQUFVLGtCQUFTRCxHQUFULEVBQWNFLFlBQWQsRUFBNEI7QUFDckMsU0FBTyxzQ0FBU0YsR0FBVCxFQUFjRSxZQUFkLENBQVA7QUFDQTtBQVplLENBQWpCIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSBcInJlZHV4XCI7XG5pbXBvcnQgeyBkZWxldGVOb3RlLCBhZGROb3RlLCBlZGl0Tm90ZSwgZ2V0Tm90ZXMgfSBmcm9tICcuL25vdGVzRGF0YWJhc2VJbnRlcmZhY2UuanMnO1xuXG5jb25zdCByZWR1Y2VyID0gZnVuY3Rpb24oc3RhdGUsIGFjdGlvbikge1xuXHRpZihhY3Rpb24udHlwZSA9PT0gXCJkZWxldGVkTm90ZVwiKSB7XG5cdFx0dmFyIHJlc3VsdCA9IGFjdGlvbi5wYXlsb2FkO1xuXHRcdGNvbnNvbGUubG9nKHJlc3VsdCk7XG5cdH0gZWxzZSBpZihhY3Rpb24udHlwZSA9PT0gXCJyZWNlaXZlZFVwZGF0ZWROb3Rlc1wiKSB7XG5cdFx0dmFyIHJlc3VsdCA9IGFjdGlvbi5wYXlsb2FkO1xuXHRcdGNvbnNvbGUubG9nKHJlc3VsdCk7XG5cdH1cblx0cmV0dXJuIHN0YXRlO1xufVxuXG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKHJlZHVjZXIsIDApO1xuc3RvcmUuc3Vic2NyaWJlKCgpID0+IHtcblx0Y29uc29sZS5sb2coXCJTVEFURSBDSEFOR0VcIik7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdGdldE5vdGVzOiBmdW5jdGlvbihzZWFyY2gsIGNiKSB7XG5cdFx0cmV0dXJuIGdldE5vdGVzKHN0b3JlLCBzZWFyY2gsIGNiKTtcblx0fSxcblx0YWRkTm90ZTogZnVuY3Rpb24obm90ZVRleHQpIHtcblx0XHRyZXR1cm4gYWRkTm90ZShub3RlVGV4dCk7XG5cdH0sXG5cdGRlbGV0ZU5vdGU6IGZ1bmN0aW9uKF9pZCkge1xuXHRcdHJldHVybiBkZWxldGVOb3RlKHN0b3JlLCBfaWQpO1xuXHR9LFxuXHRlZGl0Tm90ZTogZnVuY3Rpb24oX2lkLCBvcmlnaW5hbFRleHQpIHtcblx0XHRyZXR1cm4gZWRpdE5vdGUoX2lkLCBvcmlnaW5hbFRleHQpO1xuXHR9XG59Il19